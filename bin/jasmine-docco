#!/usr/bin/env node

require('shelljs/global');

var fs = require('fs');
var path = require('path');
var _ = require('underscore');
var docco = require('docco');
var cheerio = require('cheerio');
var args = require('minimist')(process.argv.slice(2));

var root = __dirname + '/../';

var files = args._;

var title = args.title || 'Home';

var doccoOutput = 'build/docco-out/';
var publicDir = 'build/public/';

mkdir('-p', doccoOutput);

mkdir('-p', publicDir);


function destination(file) {
    return path.join(doccoOutput, path.basename(file, path.extname(file)) + '.html');
};

var sources = files.map(function (source) {
    return {
        href: path.basename(destination(source)),
        name: path.basename(source)
    }
});

navbar = _.template(fs.readFileSync(root + 'navbar.jst').toString())({
    title: title,
    sources: sources
});


function postProc() {
    files.forEach(function (file) {
        var ext = path.extname(file);
        var specName = path.basename(file, ext);
        var specFile = path.basename(file);
        // Instrument the the docco output with the Jasmine runner
        var $ = cheerio.load(fs.readFileSync(doccoOutput + specName + '.html'));

        // Spec to run
        $('head').append('<script src="' + specFile + '"></script>');

        if (title) {
            $('.navbar-header').append('');
        }
        $('body').prepend(navbar);

        $('#before-sections').replaceWith('<p><a href="#jasmine-results"><strong>Jasmine Report</strong></a> <span id="jasmine-results-status"></span></p>');
        $('#after-sections').replaceWith('<span id="jasmine-results" />');

        fs.writeFileSync(publicDir + specName + '.html', $.html());
        cp(file, publicDir + specFile);
    });
};

docco.document({
    args: files,
    output: doccoOutput,
    template: root + '/jasmine-docco.jst',
    css: '?' // Supresses warning
}, postProc);

if (args.i) {
    docco.document({
        args: ['README.md'],
        output: doccoOutput,
        template: root + '/index.jst',
        css: '?' // Supresses warning
    }, function () {
        var $ = cheerio.load(fs.readFileSync(doccoOutput + 'README.html'));
        $('body').prepend(navbar);
        fs.writeFileSync(publicDir +  'index.html', $.html());
    });
}

// Add resources to public dir
cp('-R', root + '/public/*', publicDir);
